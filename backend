#!/usr/bin/env ruby

require 'bundler/setup'
require 'yaml'
require 'daemons'
require 'eventmachine'
require 'mailfactory'

def environment
  return ENV['AWS_ENV'] if ENV['AWS_ENV']
  [File.expand_path('~/'), "/etc"].each do |pre|
    %w(production uat developemnt).each {|e| return e if File.exists?("#{pre}/#{e}") }
  end
  return 'development'
end

env    = ARGV[0] || environment
config = YAML.load_file("_config/site.yml")
config.merge!(config.fetch("profiles", {}).fetch(env, {}))
port   = config[:port] || config['port'] || 4242
bind   = config[:bind] || config['bind'] || '127.0.0.1'

ldir  = Dir.pwd
dopts = {
  :app_name   => $0.split("/")[-1],
  :dir_mode   => :normal,
  :dir        => File.join(ldir, 'sinatra', 'log'),
  :multiple   => false,
  :ontop      => false,
  :mode       => :load,
  :backtrace  => false,
  :monitor    => true,
  :log_output => true,
}
Daemons.run_proc($0.split("/")[-1], dopts) do
  Dir.chdir(ldir) do |rdir|
    pid = fork do 
      exec(%Q{bundle exec thin -e #{env} -R #{File.join(ldir, 'config.ru')} -p #{port} -a #{bind} -l #{File.join(ldir, 'sinatra/log/thin.log')} start})
    end
    puts "thin started on #{pid}"
    ignore_death = false
    trap("SIGTERM") do 
      puts "stopping #{pid}"
      ignore_death = true
      Process.kill("KILL", pid) 
    end
    Process.waitpid(pid)
    puts "thin #{pid} terminated"
  end # rdir
end # Daemons.run
